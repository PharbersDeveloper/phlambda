AWSTemplateFormatVersion: 2010-09-09
Description: Submit Steps 20220614
Transform: AWS::Serverless-2016-10-31
Parameters:
  StateMachineName:
    Type: String
    Default: "alfredtest"
    Description: Equals to the current runnerId

  S3Bucket:
    Type: String
    Description: Dag Definition, generated by trigger lambda

  S3TemplateKey:
    Type: String
    Description: Dag Definition, generated by trigger lambda

  SubmitOwner:
    Type: String
    Default: "alfred"
    Description: somebody submit the job

  RestApiId:
    Type: String
    Default: ksakt69kwb
    Description: "RestApiId"

  ParentId:
    Type: String
    Default: iiqaf4p618
    Description: "RestApiId"

  contentHandling:
    Default: CONVERT_TO_BINARY
    Type: String

  lmdName:
    Type: String
    Default: phtestcodebuild

  PathPart:
    Type: String
    Default: phtestcodebuild

  AuthorizerId:
    Type: String
    Default: 4xyac0


Resources:
  Lmdphtestcodebuild:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main.lambda_handler
      Runtime: python3.8
      AutoPublishAlias: Current
      CodeUri: s3://ph-platform/2020-11-11/cicd/deprecated/phtestcodebuild/samtem/dev/d9e5cfef801b4feb6fd643af1c494d33
      FunctionName: lmd-phtestcodebuild-dev
      Description: phtestcodebuild
      Role: arn:aws-cn:iam::444603803904:role/Ph-Back-RW
      MemorySize: 1024
      Timeout: 600
    Metadata:
      SamResourceId: ATTFFunction

  projectResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApiId
      ParentId: !Ref ParentId
      PathPart: !Ref PathPart

  projectPOSTMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      ApiKeyRequired: false
      RestApiId: !Ref RestApiId
      ResourceId: !Ref projectResource
      RequestParameters:
        method.request.path.proxy: true #加上这组参数可以添加proxy
        method.request.header.Accept: true
        method.request.header.Content-Type: true
      HttpMethod: POST
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref AuthorizerId
      Integration:
        Type: "AWS_PROXY"
        Uri: !Sub arn:aws-cn:apigateway:cn-northwest-1:lambda:path/2015-03-31/functions/arn:aws-cn:lambda:cn-northwest-1:444603803904:function:${lmdName}:Current/invocations
        IntegrationHttpMethod: "POST"
        Credentials: arn:aws-cn:iam::444603803904:role/Ph-Cli-Lmd
        TimeoutInMillis: 29000
        RequestParameters:
          integration.request.path.proxy: 'method.request.path.proxy'
        IntegrationResponses:
          - StatusCode: "200"

      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            "method.response.header.Access-Control-Allow-Origin": Fasle
          ResponseModels:
            "application/json": "Empty"

  projectOPTIONSMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      ApiKeyRequired: false
      RestApiId: !Ref RestApiId
      ResourceId: !Ref projectResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE

      Integration:
        Type: MOCK
        TimeoutInMillis: 29000
        RequestTemplates:
          "application/json": "{\n \"statusCode\": 200\n}"
        IntegrationResponses:
          - StatusCode: "200"
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              "application/json": None

      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            "method.response.header.Access-Control-Allow-Headers": False
            "method.response.header.Access-Control-Allow-Methods": Fasle
            "method.response.header.Access-Control-Allow-Origin": Fasle
          ResponseModels:
            "application/json": "Empty"

