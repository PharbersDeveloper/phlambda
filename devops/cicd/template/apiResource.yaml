AWSTemplateFormatVersion: 2010-09-09
Description: Cloudformation template to create API gateway related resource
Parameters:
  RestApiId:
    Type: String
    Default: r8cfw4b09l
    Description : "RestApiId"

  ParentId:
    Type: String
    Default: ksakt69kwb
    Description: "RestApiId"

  contentHandling:
    Default: CONVERT_TO_BINARY
    Type: String

  lmdName:
    Type: String
    Default: phtestcodebuild

  PathPart:
    Type: String
    Default: phtestcodebuild

  AuthorizerId:
    Type: String
    Default: 4xyac0


Resources:
  Resource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApiId
      ParentId: !Ref ParentId
      PathPart: !Ref PathPart

  POSTMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      ApiKeyRequired: false
      RestApiId: !Ref RestApiId
      ResourceId: !Ref triggerResource
      RequestParameters:
        method.request.path.proxy: true #加上这组参数可以添加proxy
        method.request.header.Accept: true
        method.request.header.Content-Type: true
      HttpMethod: POST
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref AuthorizerId
      Integration:
        Type: "AWS_PROXY"
        Uri: !Sub arn:aws-cn:apigateway:cn-northwest-1:lambda:path/2015-03-31/functions/arn:aws-cn:lambda:cn-northwest-1:444603803904:function:${lmdName}:Current/invocations
        IntegrationHttpMethod: "POST"
        Credentials: arn:aws-cn:iam::444603803904:role/Ph-Cli-Lmd
        TimeoutInMillis: 29000
        RequestParameters:
          integration.request.path.proxy: 'method.request.path.proxy'
        IntegrationResponses:
          - StatusCode: "200"
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            "method.response.header.Access-Control-Allow-Origin": Fasle
          ResponseModels:
            "application/json": "Empty"

  GETMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      ApiKeyRequired: false
      RestApiId: !Ref RestApiId
      ResourceId: !Ref triggerResource
      RequestParameters:
        method.request.path.proxy: true #加上这组参数可以添加proxy
        method.request.header.Accept: true
        method.request.header.Content-Type: true
      HttpMethod: GET
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref AuthorizerId
      Integration:
        Type: "AWS_PROXY"
        Uri: !Sub arn:aws-cn:apigateway:cn-northwest-1:lambda:path/2015-03-31/functions/arn:aws-cn:lambda:cn-northwest-1:444603803904:function:${lmdName}:Current/invocations
        IntegrationHttpMethod: "POST"
        TimeoutInMillis: 29000
        Credentials: arn:aws-cn:iam::444603803904:role/Ph-Cli-Lmd
        RequestParameters:
          integration.request.path.proxy: 'method.request.path.proxy'
        IntegrationResponses:
          - StatusCode: "200"
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            "method.response.header.Access-Control-Allow-Origin": Fasle
          ResponseModels:
            "application/json": "Empty"

  DELETEMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      ApiKeyRequired: false
      RestApiId: !Ref RestApiId
      ResourceId: !Ref triggerResource
      RequestParameters:
        method.request.path.proxy: true #加上这组参数可以添加proxy
        method.request.header.Accept: true
        method.request.header.Content-Type: true
      HttpMethod: DELETE
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref AuthorizerId
      Integration:
        Type: "AWS_PROXY"
        Uri: !Sub arn:aws-cn:apigateway:cn-northwest-1:lambda:path/2015-03-31/functions/arn:aws-cn:lambda:cn-northwest-1:444603803904:function:${lmdName}:Current/invocations
        IntegrationHttpMethod: "POST"
        TimeoutInMillis: 29000
        Credentials: arn:aws-cn:iam::444603803904:role/Ph-Cli-Lmd
        RequestParameters:
          integration.request.path.proxy: 'method.request.path.proxy'
        IntegrationResponses:
          - StatusCode: "200"
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            "method.response.header.Access-Control-Allow-Origin": Fasle
          ResponseModels:
            "application/json": "Empty"

  PATCHMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      ApiKeyRequired: false
      RestApiId: !Ref RestApiId
      ResourceId: !Ref triggerResource
      RequestParameters:
        method.request.path.proxy: true #加上这组参数可以添加proxy
        method.request.header.Accept: true
        method.request.header.Content-Type: true
      HttpMethod: PATCH
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref AuthorizerId
      Integration:
        Type: "AWS_PROXY"
        Uri: !Sub arn:aws-cn:apigateway:cn-northwest-1:lambda:path/2015-03-31/functions/arn:aws-cn:lambda:cn-northwest-1:444603803904:function:${lmdName}:Current/invocations
        IntegrationHttpMethod: "POST"
        TimeoutInMillis: 29000
        Credentials: arn:aws-cn:iam::444603803904:role/Ph-Cli-Lmd
        RequestParameters:
          integration.request.path.proxy: 'method.request.path.proxy'
        IntegrationResponses:
          - StatusCode: "200"
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            "method.response.header.Access-Control-Allow-Origin": Fasle
          ResponseModels:
            "application/json": "Empty"

  OPTIONSMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      ApiKeyRequired: false
      RestApiId: !Ref RestApiId
      ResourceId: !Ref triggerResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        TimeoutInMillis: 29000
        RequestTemplates:
          "application/json": "{\n \"statusCode\": 200\n}"
        IntegrationResponses:
          - StatusCode: "200"
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates:
              "application/json": None
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            "method.response.header.Access-Control-Allow-Headers": False
            "method.response.header.Access-Control-Allow-Methods": Fasle
            "method.response.header.Access-Control-Allow-Origin": Fasle
          ResponseModels:
            "application/json": "Empty"


Outputs:
  StackName:
    Description: Stack Name
    Value: !Ref "AWS::StackName"